<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		1. sts의 Namespaces 탭에서 context를 지정
		2. component-scan 위치 지정 
	 -->
	 
	 <!-- hikariCP 설정 -->
	
	<!-- 1. spring에 의한 연결 설정 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!--  드라이버 클래스 이름이 변경됨 -->
<!-- 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" /> -->
		<!-- log4jdbc 추가 설정 -->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<!--  연결문자열에 log4jdbc가 추가됨 -->
<!-- 		<property name="jdbcUrl" value="jdbc:oracle:thin:@//127.0.0.1:1521/XE" /> -->

		<!-- log4jdbc 추가 설정 -->
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@//127.0.0.1:1521/XE" />
		<property name="username" value="book_ex" />
		<property name="password" value="book_ex" />
	</bean>
	
	<!-- 2. hikari Data source -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" />
		<!-- 추가 옵션 지정 -->
		<!-- 
		<property name="connectionTimeout">30000</property>
		<property name="maximumPoolSize">10</property>
		<property name="minimumIdle">6</property>
		<property name="idleTimeout">600000</property>
		<property name="poolName">MyHikariCP</property>
		<property name="validationTimeout">5000</property>
		<property name="autoCommit">true</property>
		 -->
		<!-- 
			connection-timeout: 30000  
				# 커넥션 풀에서 커넥션을 얻기 위해 기다릴 수 있는 최대 시간을 의미한다.
				  해당 값이 초과되면 SQLException을 던진다. 
				  최소 250 이상의 값부터 지정할 수 있다.
			maximum-pool-size: 10  # 커넥션 풀의 최대 크기 설정
			minimum-idle: 5  # 유휴 커넥션을 유지할 최소한의 커넥션 수 설정
			idle-timeout: 600000  
				# minimumIdle 개수가 될 때 까지 작동을한다.
				  minimumIdle값이 maximumPoolsize 값보다 낮아야 작동한다(이하).
 				  해당 시간이 지나면 idle 커넥션 폐기를 진행한다. 
 			maxLifetime : 1800000(ms, 30분)
 				# 커넥션 풀에 유지할 수 있는 최대시간을 의미한다. 
				  HikariDBCP는 강력하게 권고하는 사항은 다음과 같다.
				  네트워크 또는 DB에 맞게 커넥션(소켓) 타임아웃과 맞춘다.
				  만약 네트워크 또는 DB에 커넥션 유지 타임 아웃이 30분일 경우, 해당 값은 29분 55~58초 정도 설정한다. 
				  최소 값은 30초이다.
			minimumIdle : 
				# default maximumPoolSize와 같다
			pool-name: MyHikariCP  # 커넥션 풀의 이름 설정
			validation-timeout: 5000  # 커넥션 유효성 검사 타임아웃 설정 (ms)
			auto-commit: true  
				# 자동 커밋 여부를 결정
		 -->
	</bean>	
	
	<!-- 3. SqlSessionFactory 객체 주입 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mybatis 환경설정 파일 참조 -->
<!-- 		<property name="configLocation" value="classpath:/mybatis-config.xml" /> -->
		<!-- mapper의 위치를 설정 -->
		<!-- 
			classpath : src/main/resources를 말함
			** : 모든 하위 디렉토리 의미 
			* : 모든 파일 네임 
		 -->
<!-- 		<property name="mapperLocations" value="classpath:mappers/**/*-mapper.xml"/> -->
	</bean>
	
	<!-- 4. SqlSession 객체 주입-->
<!-- 	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">   auto close -->
<!-- 		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> -->
<!-- 	</bean> -->
	
	<mybatis-spring:scan base-package="org.zerock.mapper"/>
	
	<context:component-scan base-package="org.zerock.sample"></context:component-scan>	
</beans>
